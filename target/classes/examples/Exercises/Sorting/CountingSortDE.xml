<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:exercise xmlns:ns2="http://www.algoanim.info/Animal2/">
    <chainPath>/Sorting/Counting Sort/Java/de/Das_Sortierverfahren_Counting-Sort</chainPath>
    <description> Countingsort ist ein stabiles Sortierverfahren.Es sortiert eine gegebene Zahlenfolge die in im Intervall von [0,...,k] für ein festes, im Voraus bekanntes k liegen. Für jedes zu sortierende Element x wird die Anzahl der Elemente bestimmt, welche in der sortierten Reihenfolge vor x liegen, und platziere damit x an die korrekte Stelle.

Code Example
- Ermittle den Wertebereich der zu sortierenden Zahlen, falls er nicht vorgegeben ist.
- Erzeuge eine neue Liste('Zählliste'), die einen Eintrag für jedes Element des Wertebereiches hat.
  - Initialisiere alle Elemente der Zählliste mit 0.
- Für jedes Element der zu sortierenden Liste:
  - Erhähe den entsprechenden Eintrag in der Zählliste um eins.
- Für jedes Element der Zählliste, beginnend von vorne:
  - Ersetze das Element durch die Summe des aktuellen und des vorherigen Elementes.
- Erzeuge eine neue Liste von der Größe der zu sortierenden Liste, die Zielliste.
- Für jedes Element der zu sortierenden Liste, beginnend von hinten:
  - Interpretiere den Betrag als Index für die Zählliste.
  - Der dort gespeicherte Wert ist wiederum der Index für die Zielliste. (Indexiert beginnend bei 1.)
  - Kopiere das aktuelle Element der zu sortierenden Liste an die ermittelte Stelle der Zielliste.
  - Erniedrige den Wert in der Zählliste um eins.

Gegeben ein Array[2, 7, 1, 8, 2, 8, 1, 8, 2, 8, 4, 5, 9, 0, 5]
</description>
    <generatorName>generators.sorting.CountingSort</generatorName>
    <initialVariables>
        <name>Liste der zu sortierenden Zahlen.</name>
        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">[2, 7, 1, 8, 2, 8, 1, 8, 2, 8, 4, 5, 9, 0, 5]</value>
    </initialVariables>
    <questionsList>
        <decisionBox xsi:type="scriptBox" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <inputVariables>
                <name>x</name>
            </inputVariables>
            <next xsi:type="assignBox">
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <function xsi:type="ok"/>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>x</variableName>
                            </arguments>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>d</variableName>
                            </arguments>
                        </next>
                        <function xsi:type="comment"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Das Counter Array ist  [1, 2, 3, 0, 1, 2, 0, 1, 4].</value>
                        </arguments>
                    </next>
                    <function xsi:type="debug"/>
                </next>
                <variableName>d</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/visual/counterArray</value>
                    </arguments>
                </expression>
            </next>
            <AssignBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <function xsi:type="ok"/>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>x</variableName>
                            </arguments>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>d</variableName>
                            </arguments>
                        </next>
                        <function xsi:type="comment"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Das Counter Array ist  [1, 2, 3, 0, 1, 2, 0, 1, 4].</value>
                        </arguments>
                    </next>
                    <function xsi:type="debug"/>
                </next>
                <variableName>d</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/visual/counterArray</value>
                    </arguments>
                </expression>
            </AssignBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <function xsi:type="ok"/>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>x</variableName>
                        </arguments>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>d</variableName>
                        </arguments>
                    </next>
                    <function xsi:type="comment"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Das Counter Array ist  [1, 2, 3, 0, 1, 2, 0, 1, 4].</value>
                    </arguments>
                </next>
                <function xsi:type="debug"/>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <function xsi:type="ok"/>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>x</variableName>
                    </arguments>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>d</variableName>
                    </arguments>
                </next>
                <function xsi:type="comment"/>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Das Counter Array ist  [1, 2, 3, 0, 1, 2, 0, 1, 4].</value>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <function xsi:type="ok"/>
                <arguments xsi:type="valueOfIdentifier">
                    <variableName>x</variableName>
                </arguments>
                <arguments xsi:type="valueOfIdentifier">
                    <variableName>d</variableName>
                </arguments>
            </FunctionBox>
        </decisionBox>
        <inputVariables>
            <name>x</name>
        </inputVariables>
        <questionId>Question-3454406021295413044953</questionId>
        <questionText>1. Geben Sie bitte das "Counter" Array  ( in eckigen Klammern).</questionText>
        <script>// No script
d = Retrieve("events/visual/counterArray");
Debug();
Comment("Das Counter Array ist  [1, 2, 3, 0, 1, 2, 0, 1, 4].");
Ok(x,d);</script>
    </questionsList>
    <questionsList>
        <decisionBox xsi:type="scriptBox" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <inputVariables>
                <name>x</name>
            </inputVariables>
            <next xsi:type="assignBox">
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <function xsi:type="ok"/>
                            </next>
                            <function xsi:type="comment"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Das Summe-Array ist [1, 3, 6, 6, 7, 9, 9, 10, 14, 15].</value>
                            </arguments>
                        </next>
                        <function xsi:type="check"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$x = $n</value>
                        </arguments>
                    </next>
                    <function xsi:type="debug"/>
                </next>
                <variableName>n</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/visual/sumArray</value>
                    </arguments>
                </expression>
            </next>
            <AssignBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <function xsi:type="ok"/>
                            </next>
                            <function xsi:type="comment"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Das Summe-Array ist [1, 3, 6, 6, 7, 9, 9, 10, 14, 15].</value>
                            </arguments>
                        </next>
                        <function xsi:type="check"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$x = $n</value>
                        </arguments>
                    </next>
                    <function xsi:type="debug"/>
                </next>
                <variableName>n</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/visual/sumArray</value>
                    </arguments>
                </expression>
            </AssignBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <function xsi:type="ok"/>
                        </next>
                        <function xsi:type="comment"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Das Summe-Array ist [1, 3, 6, 6, 7, 9, 9, 10, 14, 15].</value>
                        </arguments>
                    </next>
                    <function xsi:type="check"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$x = $n</value>
                    </arguments>
                </next>
                <function xsi:type="debug"/>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <function xsi:type="ok"/>
                    </next>
                    <function xsi:type="comment"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Das Summe-Array ist [1, 3, 6, 6, 7, 9, 9, 10, 14, 15].</value>
                    </arguments>
                </next>
                <function xsi:type="check"/>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$x = $n</value>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <function xsi:type="ok"/>
                </next>
                <function xsi:type="comment"/>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Das Summe-Array ist [1, 3, 6, 6, 7, 9, 9, 10, 14, 15].</value>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <function xsi:type="ok"/>
            </FunctionBox>
        </decisionBox>
        <inputVariables>
            <name>x</name>
        </inputVariables>
        <questionId>Question-3454406021296381265217</questionId>
        <questionText>2. Geben Sie bitte das Summe-Array   ( in eckigen Klammern). Das Element von ihm ist die Summe des aktuellen und des vorherigen Elementes.</questionText>
        <script>// No script
n = Retrieve("events/visual/sumArray");
Debug();
Check("$x = $n");
Comment("Das Summe-Array ist [1, 3, 6, 6, 7, 9, 9, 10, 14, 15].");
Ok();</script>
    </questionsList>
    <questionsList>
        <decisionBox xsi:type="scriptBox" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <inputVariables>
                <name>x</name>
            </inputVariables>
            <next xsi:type="assignBox">
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <function xsi:type="ok"/>
                            </next>
                            <function xsi:type="comment"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Das sortierte Array ist [0,1,1,2,2,2,4,5,5,7,8,8,8,9].</value>
                            </arguments>
                        </next>
                        <function xsi:type="check"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$n = $x</value>
                        </arguments>
                    </next>
                    <function xsi:type="debug"/>
                </next>
                <variableName>n</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/visual/targetArray</value>
                    </arguments>
                </expression>
            </next>
            <AssignBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <function xsi:type="ok"/>
                            </next>
                            <function xsi:type="comment"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Das sortierte Array ist [0,1,1,2,2,2,4,5,5,7,8,8,8,9].</value>
                            </arguments>
                        </next>
                        <function xsi:type="check"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$n = $x</value>
                        </arguments>
                    </next>
                    <function xsi:type="debug"/>
                </next>
                <variableName>n</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/visual/targetArray</value>
                    </arguments>
                </expression>
            </AssignBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <function xsi:type="ok"/>
                        </next>
                        <function xsi:type="comment"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Das sortierte Array ist [0,1,1,2,2,2,4,5,5,7,8,8,8,9].</value>
                        </arguments>
                    </next>
                    <function xsi:type="check"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$n = $x</value>
                    </arguments>
                </next>
                <function xsi:type="debug"/>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <function xsi:type="ok"/>
                    </next>
                    <function xsi:type="comment"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Das sortierte Array ist [0,1,1,2,2,2,4,5,5,7,8,8,8,9].</value>
                    </arguments>
                </next>
                <function xsi:type="check"/>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$n = $x</value>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <function xsi:type="ok"/>
                </next>
                <function xsi:type="comment"/>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Das sortierte Array ist [0,1,1,2,2,2,4,5,5,7,8,8,8,9].</value>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <function xsi:type="ok"/>
            </FunctionBox>
        </decisionBox>
        <inputVariables>
            <name>x</name>
        </inputVariables>
        <questionId>Question-3454406021296382308185</questionId>
        <questionText>3. Geben Sie bitte das sortierte Array (in eckigen Klammern).</questionText>
        <script>// No script
n = Retrieve("events/visual/targetArray");
Debug();
Check("$n = $x");
Comment("Das sortierte Array ist [0,1,1,2,2,2,4,5,5,7,8,8,8,9]." );
Ok();</script>
    </questionsList>
    <questionsList>
        <decisionBox xsi:type="scriptBox" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <inputVariables>
                <name>valueInSummeArray</name>
            </inputVariables>
            <inputVariables>
                <name>indexInTargetArray</name>
                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema"></value>
            </inputVariables>
            <next xsi:type="assignBox">
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <next xsi:type="functionBox">
                                        <function xsi:type="ok"/>
                                    </next>
                                    <function xsi:type="comment"/>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Source-Array[7] hat den entsprechenden Wert 13 in Summe-Array und den Index 12 in sortierte Array.</value>
                                    </arguments>
                                </next>
                                <function xsi:type="check"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($valueInSummeArray = $countWert) and ($indexInTargetArray = $index)</value>
                                </arguments>
                            </next>
                            <function xsi:type="debug"/>
                        </next>
                        <variableName>countWert</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/count[seqnr = 8]/wert</value>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>index</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/sort[seqnr = 8]/index1</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>source</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/sort[seqnr=8]/sourceWert</value>
                    </arguments>
                </expression>
            </next>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <next xsi:type="functionBox">
                                        <function xsi:type="ok"/>
                                    </next>
                                    <function xsi:type="comment"/>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Source-Array[7] hat den entsprechenden Wert 13 in Summe-Array und den Index 12 in sortierte Array.</value>
                                    </arguments>
                                </next>
                                <function xsi:type="check"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($valueInSummeArray = $countWert) and ($indexInTargetArray = $index)</value>
                                </arguments>
                            </next>
                            <function xsi:type="debug"/>
                        </next>
                        <variableName>countWert</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/count[seqnr = 8]/wert</value>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>index</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/sort[seqnr = 8]/index1</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>source</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/sort[seqnr=8]/sourceWert</value>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <function xsi:type="ok"/>
                                </next>
                                <function xsi:type="comment"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Source-Array[7] hat den entsprechenden Wert 13 in Summe-Array und den Index 12 in sortierte Array.</value>
                                </arguments>
                            </next>
                            <function xsi:type="check"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($valueInSummeArray = $countWert) and ($indexInTargetArray = $index)</value>
                            </arguments>
                        </next>
                        <function xsi:type="debug"/>
                    </next>
                    <variableName>countWert</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/count[seqnr = 8]/wert</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>index</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/sort[seqnr = 8]/index1</value>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <function xsi:type="ok"/>
                            </next>
                            <function xsi:type="comment"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Source-Array[7] hat den entsprechenden Wert 13 in Summe-Array und den Index 12 in sortierte Array.</value>
                            </arguments>
                        </next>
                        <function xsi:type="check"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($valueInSummeArray = $countWert) and ($indexInTargetArray = $index)</value>
                        </arguments>
                    </next>
                    <function xsi:type="debug"/>
                </next>
                <variableName>countWert</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/count[seqnr = 8]/wert</value>
                    </arguments>
                </expression>
            </AssignBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <function xsi:type="ok"/>
                        </next>
                        <function xsi:type="comment"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Source-Array[7] hat den entsprechenden Wert 13 in Summe-Array und den Index 12 in sortierte Array.</value>
                        </arguments>
                    </next>
                    <function xsi:type="check"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($valueInSummeArray = $countWert) and ($indexInTargetArray = $index)</value>
                    </arguments>
                </next>
                <function xsi:type="debug"/>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <function xsi:type="ok"/>
                    </next>
                    <function xsi:type="comment"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Source-Array[7] hat den entsprechenden Wert 13 in Summe-Array und den Index 12 in sortierte Array.</value>
                    </arguments>
                </next>
                <function xsi:type="check"/>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($valueInSummeArray = $countWert) and ($indexInTargetArray = $index)</value>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <function xsi:type="ok"/>
                </next>
                <function xsi:type="comment"/>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Source-Array[7] hat den entsprechenden Wert 13 in Summe-Array und den Index 12 in sortierte Array.</value>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <function xsi:type="ok"/>
            </FunctionBox>
        </decisionBox>
        <inputVariables>
            <name>valueInSummeArray</name>
        </inputVariables>
        <inputVariables>
            <name>indexInTargetArray</name>
            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"></value>
        </inputVariables>
        <questionId>Question-3454406021296383147322</questionId>
        <questionText>5. Um das sortierte Array zu erstellen verwenden wir Source-Array und Summe-Array (Siehe das Code Beispiel). Source-Array[7] ist das Element 8. Geben Sie bitte seinen entsprechenden Wert in Summe-Array und Index in sortierte Array.</questionText>
        <script>// No script
source = Retrieve("events/sort[seqnr=8]/sourceWert");
index = Retrieve("events/sort[seqnr = 8]/index1");
countWert = Retrieve("events/count[seqnr = 8]/wert");
Debug();
Check("($valueInSummeArray = $countWert) and ($indexInTargetArray = $index)");
Comment("Source-Array[7] hat den entsprechenden Wert 13 in Summe-Array und den Index 12 in sortierte Array.");
Ok();</script>
    </questionsList>
    <subTitle>Output  Language: Java
Author: Xiaofan Fan</subTitle>
    <title>Counting Sort</title>
</ns2:exercise>
