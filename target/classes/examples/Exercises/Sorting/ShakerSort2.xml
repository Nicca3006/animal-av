<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:exercise xmlns:ns2="http://www.algoanim.info/Animal2/">
    <chainPath>/Sorting/Shaker Sort/Java/en/Shaker_Sort</chainPath>
    <description>Shakersort is a variation of bubble sort that is both a stable sorting algorithm and a comparison sort. The algorithm differs from bubble sort in that sorts in both directions each pass through the list. This sorting algorithm is only marginally more difficult than bubble sort to implement, and solves the problem with so-called turtles in bubble sort. (taken from wikipedia).

array = [4,6,1,15,17,-20]</description>
    <generatorName>generators.sorting.shakersort.ShakerSort2</generatorName>
    <initialVariables>
        <name>array</name>
        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4,6,1,9,15,17,-20</value>
    </initialVariables>
    <questionsList>
        <decisionBox xsi:type="scriptBox" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <inputVariables>
                <name>LeftBoundary</name>
            </inputVariables>
            <inputVariables>
                <name>RightBoundary</name>
                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema"></value>
            </inputVariables>
            <next xsi:type="assignBox">
                <next xsi:type="assignBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="assignBox">
                                <next xsi:type="assignBox">
                                    <next xsi:type="assignBox">
                                        <next xsi:type="assignBox">
                                            <next xsi:type="functionBox">
                                                <next xsi:type="functionBox">
                                                    <next xsi:type="functionBox">
                                                        <next xsi:type="functionBox">
                                                            <function xsi:type="ok"/>
                                                        </next>
                                                        <function xsi:type="check"/>
                                                        <arguments xsi:type="constantValue">
                                                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftValue = $LeftBoundary</value>
                                                        </arguments>
                                                        <arguments xsi:type="constantValue">
                                                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">left incorrect, Hint: initially the whole array is used </value>
                                                        </arguments>
                                                    </next>
                                                    <function xsi:type="check"/>
                                                    <arguments xsi:type="constantValue">
                                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightValue = $RightBoundary</value>
                                                    </arguments>
                                                    <arguments xsi:type="constantValue">
                                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">right incorrect, Hint: initially the whole array is used</value>
                                                    </arguments>
                                                </next>
                                                <function xsi:type="debug"/>
                                            </next>
                                            <variableName>leftValue</variableName>
                                            <expression xsi:type="functionBox">
                                                <function xsi:type="retrieve"/>
                                                <arguments xsi:type="constantValue">
                                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/lCurrentIndex</value>
                                                </arguments>
                                                <arguments xsi:type="valueOfIdentifier">
                                                    <variableName>leftBoundary</variableName>
                                                </arguments>
                                            </expression>
                                        </next>
                                        <variableName>rightValue</variableName>
                                        <expression xsi:type="functionBox">
                                            <function xsi:type="retrieve"/>
                                            <arguments xsi:type="constantValue">
                                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/rCurrentIndex</value>
                                            </arguments>
                                            <arguments xsi:type="valueOfIdentifier">
                                                <variableName>rightBoundary</variableName>
                                            </arguments>
                                        </expression>
                                    </next>
                                    <variableName>leftBoundary</variableName>
                                    <expression xsi:type="functionBox">
                                        <function xsi:type="retrieve"/>
                                        <arguments xsi:type="constantValue">
                                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/ShakeDownFin[seqnr = 1]</value>
                                        </arguments>
                                    </expression>
                                </next>
                                <variableName>rightBoundary</variableName>
                                <expression xsi:type="functionBox">
                                    <function xsi:type="retrieve"/>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/ShakeUpFin[seqnr = 1]</value>
                                    </arguments>
                                </expression>
                            </next>
                            <function xsi:type="animate"/>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>anim2</variableName>
                            </arguments>
                        </next>
                        <function xsi:type="animate"/>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>anim1</variableName>
                        </arguments>
                    </next>
                    <variableName>anim2</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapDownEvent</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>anim1</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapUpEvent</value>
                    </arguments>
                </expression>
            </next>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="assignBox">
                                <next xsi:type="assignBox">
                                    <next xsi:type="assignBox">
                                        <next xsi:type="assignBox">
                                            <next xsi:type="functionBox">
                                                <next xsi:type="functionBox">
                                                    <next xsi:type="functionBox">
                                                        <next xsi:type="functionBox">
                                                            <function xsi:type="ok"/>
                                                        </next>
                                                        <function xsi:type="check"/>
                                                        <arguments xsi:type="constantValue">
                                                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftValue = $LeftBoundary</value>
                                                        </arguments>
                                                        <arguments xsi:type="constantValue">
                                                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">left incorrect, Hint: initially the whole array is used </value>
                                                        </arguments>
                                                    </next>
                                                    <function xsi:type="check"/>
                                                    <arguments xsi:type="constantValue">
                                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightValue = $RightBoundary</value>
                                                    </arguments>
                                                    <arguments xsi:type="constantValue">
                                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">right incorrect, Hint: initially the whole array is used</value>
                                                    </arguments>
                                                </next>
                                                <function xsi:type="debug"/>
                                            </next>
                                            <variableName>leftValue</variableName>
                                            <expression xsi:type="functionBox">
                                                <function xsi:type="retrieve"/>
                                                <arguments xsi:type="constantValue">
                                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/lCurrentIndex</value>
                                                </arguments>
                                                <arguments xsi:type="valueOfIdentifier">
                                                    <variableName>leftBoundary</variableName>
                                                </arguments>
                                            </expression>
                                        </next>
                                        <variableName>rightValue</variableName>
                                        <expression xsi:type="functionBox">
                                            <function xsi:type="retrieve"/>
                                            <arguments xsi:type="constantValue">
                                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/rCurrentIndex</value>
                                            </arguments>
                                            <arguments xsi:type="valueOfIdentifier">
                                                <variableName>rightBoundary</variableName>
                                            </arguments>
                                        </expression>
                                    </next>
                                    <variableName>leftBoundary</variableName>
                                    <expression xsi:type="functionBox">
                                        <function xsi:type="retrieve"/>
                                        <arguments xsi:type="constantValue">
                                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/ShakeDownFin[seqnr = 1]</value>
                                        </arguments>
                                    </expression>
                                </next>
                                <variableName>rightBoundary</variableName>
                                <expression xsi:type="functionBox">
                                    <function xsi:type="retrieve"/>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/ShakeUpFin[seqnr = 1]</value>
                                    </arguments>
                                </expression>
                            </next>
                            <function xsi:type="animate"/>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>anim2</variableName>
                            </arguments>
                        </next>
                        <function xsi:type="animate"/>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>anim1</variableName>
                        </arguments>
                    </next>
                    <variableName>anim2</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapDownEvent</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>anim1</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapUpEvent</value>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="assignBox">
                            <next xsi:type="assignBox">
                                <next xsi:type="assignBox">
                                    <next xsi:type="assignBox">
                                        <next xsi:type="functionBox">
                                            <next xsi:type="functionBox">
                                                <next xsi:type="functionBox">
                                                    <next xsi:type="functionBox">
                                                        <function xsi:type="ok"/>
                                                    </next>
                                                    <function xsi:type="check"/>
                                                    <arguments xsi:type="constantValue">
                                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftValue = $LeftBoundary</value>
                                                    </arguments>
                                                    <arguments xsi:type="constantValue">
                                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">left incorrect, Hint: initially the whole array is used </value>
                                                    </arguments>
                                                </next>
                                                <function xsi:type="check"/>
                                                <arguments xsi:type="constantValue">
                                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightValue = $RightBoundary</value>
                                                </arguments>
                                                <arguments xsi:type="constantValue">
                                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">right incorrect, Hint: initially the whole array is used</value>
                                                </arguments>
                                            </next>
                                            <function xsi:type="debug"/>
                                        </next>
                                        <variableName>leftValue</variableName>
                                        <expression xsi:type="functionBox">
                                            <function xsi:type="retrieve"/>
                                            <arguments xsi:type="constantValue">
                                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/lCurrentIndex</value>
                                            </arguments>
                                            <arguments xsi:type="valueOfIdentifier">
                                                <variableName>leftBoundary</variableName>
                                            </arguments>
                                        </expression>
                                    </next>
                                    <variableName>rightValue</variableName>
                                    <expression xsi:type="functionBox">
                                        <function xsi:type="retrieve"/>
                                        <arguments xsi:type="constantValue">
                                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/rCurrentIndex</value>
                                        </arguments>
                                        <arguments xsi:type="valueOfIdentifier">
                                            <variableName>rightBoundary</variableName>
                                        </arguments>
                                    </expression>
                                </next>
                                <variableName>leftBoundary</variableName>
                                <expression xsi:type="functionBox">
                                    <function xsi:type="retrieve"/>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/ShakeDownFin[seqnr = 1]</value>
                                    </arguments>
                                </expression>
                            </next>
                            <variableName>rightBoundary</variableName>
                            <expression xsi:type="functionBox">
                                <function xsi:type="retrieve"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/ShakeUpFin[seqnr = 1]</value>
                                </arguments>
                            </expression>
                        </next>
                        <function xsi:type="animate"/>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>anim2</variableName>
                        </arguments>
                    </next>
                    <function xsi:type="animate"/>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>anim1</variableName>
                    </arguments>
                </next>
                <variableName>anim2</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapDownEvent</value>
                    </arguments>
                </expression>
            </AssignBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="assignBox">
                            <next xsi:type="assignBox">
                                <next xsi:type="assignBox">
                                    <next xsi:type="functionBox">
                                        <next xsi:type="functionBox">
                                            <next xsi:type="functionBox">
                                                <next xsi:type="functionBox">
                                                    <function xsi:type="ok"/>
                                                </next>
                                                <function xsi:type="check"/>
                                                <arguments xsi:type="constantValue">
                                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftValue = $LeftBoundary</value>
                                                </arguments>
                                                <arguments xsi:type="constantValue">
                                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">left incorrect, Hint: initially the whole array is used </value>
                                                </arguments>
                                            </next>
                                            <function xsi:type="check"/>
                                            <arguments xsi:type="constantValue">
                                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightValue = $RightBoundary</value>
                                            </arguments>
                                            <arguments xsi:type="constantValue">
                                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">right incorrect, Hint: initially the whole array is used</value>
                                            </arguments>
                                        </next>
                                        <function xsi:type="debug"/>
                                    </next>
                                    <variableName>leftValue</variableName>
                                    <expression xsi:type="functionBox">
                                        <function xsi:type="retrieve"/>
                                        <arguments xsi:type="constantValue">
                                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/lCurrentIndex</value>
                                        </arguments>
                                        <arguments xsi:type="valueOfIdentifier">
                                            <variableName>leftBoundary</variableName>
                                        </arguments>
                                    </expression>
                                </next>
                                <variableName>rightValue</variableName>
                                <expression xsi:type="functionBox">
                                    <function xsi:type="retrieve"/>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/rCurrentIndex</value>
                                    </arguments>
                                    <arguments xsi:type="valueOfIdentifier">
                                        <variableName>rightBoundary</variableName>
                                    </arguments>
                                </expression>
                            </next>
                            <variableName>leftBoundary</variableName>
                            <expression xsi:type="functionBox">
                                <function xsi:type="retrieve"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/ShakeDownFin[seqnr = 1]</value>
                                </arguments>
                            </expression>
                        </next>
                        <variableName>rightBoundary</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/ShakeUpFin[seqnr = 1]</value>
                            </arguments>
                        </expression>
                    </next>
                    <function xsi:type="animate"/>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>anim2</variableName>
                    </arguments>
                </next>
                <function xsi:type="animate"/>
                <arguments xsi:type="valueOfIdentifier">
                    <variableName>anim1</variableName>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="assignBox">
                            <next xsi:type="assignBox">
                                <next xsi:type="functionBox">
                                    <next xsi:type="functionBox">
                                        <next xsi:type="functionBox">
                                            <next xsi:type="functionBox">
                                                <function xsi:type="ok"/>
                                            </next>
                                            <function xsi:type="check"/>
                                            <arguments xsi:type="constantValue">
                                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftValue = $LeftBoundary</value>
                                            </arguments>
                                            <arguments xsi:type="constantValue">
                                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">left incorrect, Hint: initially the whole array is used </value>
                                            </arguments>
                                        </next>
                                        <function xsi:type="check"/>
                                        <arguments xsi:type="constantValue">
                                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightValue = $RightBoundary</value>
                                        </arguments>
                                        <arguments xsi:type="constantValue">
                                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">right incorrect, Hint: initially the whole array is used</value>
                                        </arguments>
                                    </next>
                                    <function xsi:type="debug"/>
                                </next>
                                <variableName>leftValue</variableName>
                                <expression xsi:type="functionBox">
                                    <function xsi:type="retrieve"/>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/lCurrentIndex</value>
                                    </arguments>
                                    <arguments xsi:type="valueOfIdentifier">
                                        <variableName>leftBoundary</variableName>
                                    </arguments>
                                </expression>
                            </next>
                            <variableName>rightValue</variableName>
                            <expression xsi:type="functionBox">
                                <function xsi:type="retrieve"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/rCurrentIndex</value>
                                </arguments>
                                <arguments xsi:type="valueOfIdentifier">
                                    <variableName>rightBoundary</variableName>
                                </arguments>
                            </expression>
                        </next>
                        <variableName>leftBoundary</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/ShakeDownFin[seqnr = 1]</value>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>rightBoundary</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/ShakeUpFin[seqnr = 1]</value>
                        </arguments>
                    </expression>
                </next>
                <function xsi:type="animate"/>
                <arguments xsi:type="valueOfIdentifier">
                    <variableName>anim2</variableName>
                </arguments>
            </FunctionBox>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="assignBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <next xsi:type="functionBox">
                                        <next xsi:type="functionBox">
                                            <function xsi:type="ok"/>
                                        </next>
                                        <function xsi:type="check"/>
                                        <arguments xsi:type="constantValue">
                                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftValue = $LeftBoundary</value>
                                        </arguments>
                                        <arguments xsi:type="constantValue">
                                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">left incorrect, Hint: initially the whole array is used </value>
                                        </arguments>
                                    </next>
                                    <function xsi:type="check"/>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightValue = $RightBoundary</value>
                                    </arguments>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">right incorrect, Hint: initially the whole array is used</value>
                                    </arguments>
                                </next>
                                <function xsi:type="debug"/>
                            </next>
                            <variableName>leftValue</variableName>
                            <expression xsi:type="functionBox">
                                <function xsi:type="retrieve"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/lCurrentIndex</value>
                                </arguments>
                                <arguments xsi:type="valueOfIdentifier">
                                    <variableName>leftBoundary</variableName>
                                </arguments>
                            </expression>
                        </next>
                        <variableName>rightValue</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/rCurrentIndex</value>
                            </arguments>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>rightBoundary</variableName>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>leftBoundary</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/ShakeDownFin[seqnr = 1]</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>rightBoundary</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/ShakeUpFin[seqnr = 1]</value>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <next xsi:type="functionBox">
                                        <function xsi:type="ok"/>
                                    </next>
                                    <function xsi:type="check"/>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftValue = $LeftBoundary</value>
                                    </arguments>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">left incorrect, Hint: initially the whole array is used </value>
                                    </arguments>
                                </next>
                                <function xsi:type="check"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightValue = $RightBoundary</value>
                                </arguments>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">right incorrect, Hint: initially the whole array is used</value>
                                </arguments>
                            </next>
                            <function xsi:type="debug"/>
                        </next>
                        <variableName>leftValue</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/lCurrentIndex</value>
                            </arguments>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>leftBoundary</variableName>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>rightValue</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/rCurrentIndex</value>
                        </arguments>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>rightBoundary</variableName>
                        </arguments>
                    </expression>
                </next>
                <variableName>leftBoundary</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/ShakeDownFin[seqnr = 1]</value>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <function xsi:type="ok"/>
                                </next>
                                <function xsi:type="check"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftValue = $LeftBoundary</value>
                                </arguments>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">left incorrect, Hint: initially the whole array is used </value>
                                </arguments>
                            </next>
                            <function xsi:type="check"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightValue = $RightBoundary</value>
                            </arguments>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">right incorrect, Hint: initially the whole array is used</value>
                            </arguments>
                        </next>
                        <function xsi:type="debug"/>
                    </next>
                    <variableName>leftValue</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/lCurrentIndex</value>
                        </arguments>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>leftBoundary</variableName>
                        </arguments>
                    </expression>
                </next>
                <variableName>rightValue</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/rCurrentIndex</value>
                    </arguments>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>rightBoundary</variableName>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <function xsi:type="ok"/>
                            </next>
                            <function xsi:type="check"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftValue = $LeftBoundary</value>
                            </arguments>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">left incorrect, Hint: initially the whole array is used </value>
                            </arguments>
                        </next>
                        <function xsi:type="check"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightValue = $RightBoundary</value>
                        </arguments>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">right incorrect, Hint: initially the whole array is used</value>
                        </arguments>
                    </next>
                    <function xsi:type="debug"/>
                </next>
                <variableName>leftValue</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/lCurrentIndex</value>
                    </arguments>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>leftBoundary</variableName>
                    </arguments>
                </expression>
            </AssignBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <function xsi:type="ok"/>
                        </next>
                        <function xsi:type="check"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftValue = $LeftBoundary</value>
                        </arguments>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">left incorrect, Hint: initially the whole array is used </value>
                        </arguments>
                    </next>
                    <function xsi:type="check"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightValue = $RightBoundary</value>
                    </arguments>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">right incorrect, Hint: initially the whole array is used</value>
                    </arguments>
                </next>
                <function xsi:type="debug"/>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <function xsi:type="ok"/>
                    </next>
                    <function xsi:type="check"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftValue = $LeftBoundary</value>
                    </arguments>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">left incorrect, Hint: initially the whole array is used </value>
                    </arguments>
                </next>
                <function xsi:type="check"/>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightValue = $RightBoundary</value>
                </arguments>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">right incorrect, Hint: initially the whole array is used</value>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <function xsi:type="ok"/>
                </next>
                <function xsi:type="check"/>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftValue = $LeftBoundary</value>
                </arguments>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">left incorrect, Hint: initially the whole array is used </value>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <function xsi:type="ok"/>
            </FunctionBox>
        </decisionBox>
        <inputVariables>
            <name>LeftBoundary</name>
        </inputVariables>
        <inputVariables>
            <name>RightBoundary</name>
            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"></value>
        </inputVariables>
        <questionId>Question-3454406021288805078419</questionId>
        <questionText>What are the initial indices of the left and right boundaries?</questionText>
        <script>// No script
anim1 = Retrieve("events/swapUpEvent");
anim2 = Retrieve("events/swapDownEvent");
Animate(anim1);
Animate(anim2);

rightBoundary = Retrieve("events/ShakeUpFin[seqnr = 1]");
leftBoundary = Retrieve("events/ShakeDownFin[seqnr = 1]");

rightValue = Retrieve("/rCurrentIndex", rightBoundary);
leftValue = Retrieve("/lCurrentIndex", leftBoundary);

Debug();
Check("$rightValue = $RightBoundary", "right incorrect, Hint: initially the whole array is used");
Check("$leftValue = $LeftBoundary", "left incorrect, Hint: initially the whole array is used ");

Ok();</script>
    </questionsList>
    <questionsList>
        <decisionBox xsi:type="scriptBox" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <inputVariables>
                <name>x</name>
            </inputVariables>
            <next xsi:type="assignBox">
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <function xsi:type="ok"/>
                                </next>
                                <function xsi:type="debug"/>
                            </next>
                            <function xsi:type="ok"/>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>total</variableName>
                            </arguments>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>x</variableName>
                            </arguments>
                        </next>
                        <variableName>total</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$upShakes + $downShakes</value>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>downShakes</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(events/ShakeDownFin)</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>upShakes</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(events/ShakeUpFin)</value>
                    </arguments>
                </expression>
            </next>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <function xsi:type="ok"/>
                                </next>
                                <function xsi:type="debug"/>
                            </next>
                            <function xsi:type="ok"/>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>total</variableName>
                            </arguments>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>x</variableName>
                            </arguments>
                        </next>
                        <variableName>total</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$upShakes + $downShakes</value>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>downShakes</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(events/ShakeDownFin)</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>upShakes</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(events/ShakeUpFin)</value>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <function xsi:type="ok"/>
                            </next>
                            <function xsi:type="debug"/>
                        </next>
                        <function xsi:type="ok"/>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>total</variableName>
                        </arguments>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>x</variableName>
                        </arguments>
                    </next>
                    <variableName>total</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$upShakes + $downShakes</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>downShakes</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(events/ShakeDownFin)</value>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <function xsi:type="ok"/>
                        </next>
                        <function xsi:type="debug"/>
                    </next>
                    <function xsi:type="ok"/>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>total</variableName>
                    </arguments>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>x</variableName>
                    </arguments>
                </next>
                <variableName>total</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$upShakes + $downShakes</value>
                    </arguments>
                </expression>
            </AssignBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <function xsi:type="ok"/>
                    </next>
                    <function xsi:type="debug"/>
                </next>
                <function xsi:type="ok"/>
                <arguments xsi:type="valueOfIdentifier">
                    <variableName>total</variableName>
                </arguments>
                <arguments xsi:type="valueOfIdentifier">
                    <variableName>x</variableName>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <function xsi:type="ok"/>
                </next>
                <function xsi:type="debug"/>
            </FunctionBox>
            <FunctionBox>
                <function xsi:type="ok"/>
            </FunctionBox>
        </decisionBox>
        <inputVariables>
            <name>x</name>
        </inputVariables>
        <questionId>Question-3454406021289161416123</questionId>
        <questionText>How many 'shakes' are required to sort the array?</questionText>
        <script>// No script

upShakes = Retrieve("count(events/ShakeUpFin)");
downShakes = Retrieve("count(events/ShakeDownFin)");
total = Retrieve("$upShakes + $downShakes");
Ok(total, x);
Debug();
Ok();</script>
    </questionsList>
    <questionsList>
        <decisionBox xsi:type="scriptBox" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <inputVariables>
                <name>leftIndex</name>
            </inputVariables>
            <inputVariables>
                <name>rightIndex</name>
                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema"></value>
            </inputVariables>
            <next xsi:type="assignBox">
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <next xsi:type="functionBox">
                                        <function xsi:type="ok"/>
                                    </next>
                                    <function xsi:type="debug"/>
                                </next>
                                <function xsi:type="check"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightIndex = $index2</value>
                                </arguments>
                            </next>
                            <function xsi:type="check"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftIndex = $index1</value>
                            </arguments>
                        </next>
                        <variableName>index2</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/rightIndex</value>
                            </arguments>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>upEvent</variableName>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>index1</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/leftIndex</value>
                        </arguments>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>upEvent</variableName>
                        </arguments>
                    </expression>
                </next>
                <variableName>upEvent</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapUpEvent[seqnr = 1]</value>
                    </arguments>
                </expression>
            </next>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <next xsi:type="functionBox">
                                        <function xsi:type="ok"/>
                                    </next>
                                    <function xsi:type="debug"/>
                                </next>
                                <function xsi:type="check"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightIndex = $index2</value>
                                </arguments>
                            </next>
                            <function xsi:type="check"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftIndex = $index1</value>
                            </arguments>
                        </next>
                        <variableName>index2</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/rightIndex</value>
                            </arguments>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>upEvent</variableName>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>index1</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/leftIndex</value>
                        </arguments>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>upEvent</variableName>
                        </arguments>
                    </expression>
                </next>
                <variableName>upEvent</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapUpEvent[seqnr = 1]</value>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <function xsi:type="ok"/>
                                </next>
                                <function xsi:type="debug"/>
                            </next>
                            <function xsi:type="check"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightIndex = $index2</value>
                            </arguments>
                        </next>
                        <function xsi:type="check"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftIndex = $index1</value>
                        </arguments>
                    </next>
                    <variableName>index2</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/rightIndex</value>
                        </arguments>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>upEvent</variableName>
                        </arguments>
                    </expression>
                </next>
                <variableName>index1</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/leftIndex</value>
                    </arguments>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>upEvent</variableName>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <function xsi:type="ok"/>
                            </next>
                            <function xsi:type="debug"/>
                        </next>
                        <function xsi:type="check"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightIndex = $index2</value>
                        </arguments>
                    </next>
                    <function xsi:type="check"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftIndex = $index1</value>
                    </arguments>
                </next>
                <variableName>index2</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">/rightIndex</value>
                    </arguments>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>upEvent</variableName>
                    </arguments>
                </expression>
            </AssignBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <function xsi:type="ok"/>
                        </next>
                        <function xsi:type="debug"/>
                    </next>
                    <function xsi:type="check"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightIndex = $index2</value>
                    </arguments>
                </next>
                <function xsi:type="check"/>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$leftIndex = $index1</value>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <function xsi:type="ok"/>
                    </next>
                    <function xsi:type="debug"/>
                </next>
                <function xsi:type="check"/>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$rightIndex = $index2</value>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <function xsi:type="ok"/>
                </next>
                <function xsi:type="debug"/>
            </FunctionBox>
            <FunctionBox>
                <function xsi:type="ok"/>
            </FunctionBox>
        </decisionBox>
        <inputVariables>
            <name>leftIndex</name>
        </inputVariables>
        <inputVariables>
            <name>rightIndex</name>
            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"></value>
        </inputVariables>
        <questionId>Question-3454406021289199619067</questionId>
        <questionText>On the first up shake (left to right) which will be the first indices to be swapped?</questionText>
        <script>// No script

upEvent = Retrieve("events/swapUpEvent[seqnr = 1]");
index1 = Retrieve("/leftIndex", upEvent);
index2= Retrieve("/rightIndex", upEvent);
Check("$leftIndex = $index1");
Check("$rightIndex = $index2");
Debug();
Ok();</script>
    </questionsList>
    <questionsList>
        <decisionBox xsi:type="scriptBox" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <inputVariables>
                <name>array</name>
            </inputVariables>
            <next xsi:type="functionBox">
                <function xsi:type="ok"/>
            </next>
            <FunctionBox>
                <function xsi:type="ok"/>
            </FunctionBox>
        </decisionBox>
        <inputVariables>
            <name>array</name>
        </inputVariables>
        <questionId>Question-3454406021289994750113</questionId>
        <questionText>Provide an array which will be sorted after 2 shakes</questionText>
        <script>// No script
Ok();</script>
    </questionsList>
    <subTitle>by Jerome Saltmarsh</subTitle>
    <title>ShakerSort Exercise</title>
</ns2:exercise>
