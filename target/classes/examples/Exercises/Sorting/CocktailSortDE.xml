<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:exercise xmlns:ns2="http://www.algoanim.info/Animal2/">
    <chainPath>/Sorting/Cocktail Sort/Java/de/Cocktail_Sort_Optimized</chainPath>
    <description>Bei dem Cocktailsort handelt es sich um einen Bidirektionalen Bubblesort Algorithmus, d.h. es erfolgt abwechselnd ein Durchlauf in Richtung und Gegenrichtung des zu sortierenden Arrays. Ein Durchlauf sieht so aus, dass immer zwei benachbarte Elemente mit einander verglichen werden, ist das linke Element im Array größer, werden die Elemente vertauscht. Nach jedem Vergleich geht es im Array eine Position weiter (entweder Hin- oder Gegenrichtung). Die Optimierung liegt darin, dass ein Durchlauf bei der Position des letzten Umtausches der Gegenrichtung beginnt und der Position des letzten Umtausches (des vorherigen Durchlaufes) der selben Richtung endet.

Gegeben ein Array [4,5,1,3,2,6,8,7]</description>
    <generatorName>generators.sorting.CocktailSortOptimized</generatorName>
    <initialVariables>
        <name>Array Werte</name>
        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">[4,5,1,3,2,6,8,7]]</value>
    </initialVariables>
    <questionsList>
        <decisionBox xsi:type="scriptBox" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <inputVariables>
                <name>x</name>
            </inputVariables>
            <next xsi:type="assignBox">
                <next xsi:type="assignBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <function xsi:type="ok"/>
                                <arguments xsi:type="valueOfIdentifier">
                                    <variableName>x</variableName>
                                </arguments>
                                <arguments xsi:type="valueOfIdentifier">
                                    <variableName>total</variableName>
                                </arguments>
                            </next>
                            <function xsi:type="comment"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Die korrekte Antwort ist 8.</value>
                            </arguments>
                        </next>
                        <function xsi:type="debug"/>
                    </next>
                    <variableName>total</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(/)</value>
                        </arguments>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>n</variableName>
                        </arguments>
                    </expression>
                </next>
                <variableName>n</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent</value>
                    </arguments>
                </expression>
            </next>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <function xsi:type="ok"/>
                                <arguments xsi:type="valueOfIdentifier">
                                    <variableName>x</variableName>
                                </arguments>
                                <arguments xsi:type="valueOfIdentifier">
                                    <variableName>total</variableName>
                                </arguments>
                            </next>
                            <function xsi:type="comment"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Die korrekte Antwort ist 8.</value>
                            </arguments>
                        </next>
                        <function xsi:type="debug"/>
                    </next>
                    <variableName>total</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(/)</value>
                        </arguments>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>n</variableName>
                        </arguments>
                    </expression>
                </next>
                <variableName>n</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent</value>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <function xsi:type="ok"/>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>x</variableName>
                            </arguments>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>total</variableName>
                            </arguments>
                        </next>
                        <function xsi:type="comment"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Die korrekte Antwort ist 8.</value>
                        </arguments>
                    </next>
                    <function xsi:type="debug"/>
                </next>
                <variableName>total</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(/)</value>
                    </arguments>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>n</variableName>
                    </arguments>
                </expression>
            </AssignBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <function xsi:type="ok"/>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>x</variableName>
                        </arguments>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>total</variableName>
                        </arguments>
                    </next>
                    <function xsi:type="comment"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Die korrekte Antwort ist 8.</value>
                    </arguments>
                </next>
                <function xsi:type="debug"/>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <function xsi:type="ok"/>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>x</variableName>
                    </arguments>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>total</variableName>
                    </arguments>
                </next>
                <function xsi:type="comment"/>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Die korrekte Antwort ist 8.</value>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <function xsi:type="ok"/>
                <arguments xsi:type="valueOfIdentifier">
                    <variableName>x</variableName>
                </arguments>
                <arguments xsi:type="valueOfIdentifier">
                    <variableName>total</variableName>
                </arguments>
            </FunctionBox>
        </decisionBox>
        <inputVariables>
            <name>x</name>
        </inputVariables>
        <questionId>Question-3454406021295346804931</questionId>
        <questionText>1. Wie viele Austausch wurden hier durch Cocktail Sort benötigt?</questionText>
        <script>// No script
n = Retrieve("events/swapEvent");
total = Retrieve("count(/)",n);
Debug();
Comment("Die korrekte Antwort ist 8.");
Ok(x,total);</script>
    </questionsList>
    <questionsList>
        <decisionBox xsi:type="scriptBox" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <inputVariables>
                <name>Anfangsposition</name>
            </inputVariables>
            <inputVariables>
                <name>Endposition</name>
                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema"></value>
            </inputVariables>
            <next xsi:type="assignBox">
                <next xsi:type="assignBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <function xsi:type="ok"/>
                            </next>
                            <function xsi:type="check"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($Anfangsposition = $n1) and ($Endposition =$n2)</value>
                            </arguments>
                        </next>
                        <function xsi:type="debug"/>
                    </next>
                    <variableName>n2</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/suchenNewEnd[seqnr = 1]/endfront</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>n1</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/suchenNewEnd[seqnr = 1]/endback</value>
                    </arguments>
                </expression>
            </next>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <function xsi:type="ok"/>
                            </next>
                            <function xsi:type="check"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($Anfangsposition = $n1) and ($Endposition =$n2)</value>
                            </arguments>
                        </next>
                        <function xsi:type="debug"/>
                    </next>
                    <variableName>n2</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/suchenNewEnd[seqnr = 1]/endfront</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>n1</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/suchenNewEnd[seqnr = 1]/endback</value>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <function xsi:type="ok"/>
                        </next>
                        <function xsi:type="check"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($Anfangsposition = $n1) and ($Endposition =$n2)</value>
                        </arguments>
                    </next>
                    <function xsi:type="debug"/>
                </next>
                <variableName>n2</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/suchenNewEnd[seqnr = 1]/endfront</value>
                    </arguments>
                </expression>
            </AssignBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <function xsi:type="ok"/>
                    </next>
                    <function xsi:type="check"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($Anfangsposition = $n1) and ($Endposition =$n2)</value>
                    </arguments>
                </next>
                <function xsi:type="debug"/>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <function xsi:type="ok"/>
                </next>
                <function xsi:type="check"/>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($Anfangsposition = $n1) and ($Endposition =$n2)</value>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <function xsi:type="ok"/>
            </FunctionBox>
        </decisionBox>
        <inputVariables>
            <name>Anfangsposition</name>
        </inputVariables>
        <inputVariables>
            <name>Endposition</name>
            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"></value>
        </inputVariables>
        <questionId>Question-3454406021295405953752</questionId>
        <questionText>2. Geben Sie bitte die Anfangsposition und Endposition bei dem ersten Durchlauf  in  Gegenrichtung</questionText>
        <script>// No script
n1 = Retrieve("events/suchenNewEnd[seqnr = 1]/endback");
n2 = Retrieve("events/suchenNewEnd[seqnr = 1]/endfront");
Debug();
Check("($Anfangsposition = $n1) and ($Endposition =$n2)");
Ok();</script>
    </questionsList>
    <questionsList>
        <decisionBox xsi:type="scriptBox" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <inputVariables>
                <name>ele1</name>
            </inputVariables>
            <inputVariables>
                <name>ele2</name>
                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema"></value>
            </inputVariables>
            <inputVariables>
                <name>ele3</name>
                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema"></value>
            </inputVariables>
            <next xsi:type="assignBox">
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="assignBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <next xsi:type="functionBox">
                                        <function xsi:type="ok"/>
                                    </next>
                                    <function xsi:type="check"/>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($ele1 = $n1) and ($ele2 = $m1) and ($ele3 = $m2)</value>
                                    </arguments>
                                </next>
                                <function xsi:type="debug"/>
                            </next>
                            <variableName>m2</variableName>
                            <expression xsi:type="functionBox">
                                <function xsi:type="retrieve"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[backele1=2]/backele1</value>
                                </arguments>
                            </expression>
                        </next>
                        <variableName>m1</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[backele1=1]/backele2</value>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>n2</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[frontele2=1]/frontele1</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>n1</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[frontele1=1]/frontele2</value>
                    </arguments>
                </expression>
            </next>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="assignBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <next xsi:type="functionBox">
                                        <function xsi:type="ok"/>
                                    </next>
                                    <function xsi:type="check"/>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($ele1 = $n1) and ($ele2 = $m1) and ($ele3 = $m2)</value>
                                    </arguments>
                                </next>
                                <function xsi:type="debug"/>
                            </next>
                            <variableName>m2</variableName>
                            <expression xsi:type="functionBox">
                                <function xsi:type="retrieve"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[backele1=2]/backele1</value>
                                </arguments>
                            </expression>
                        </next>
                        <variableName>m1</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[backele1=1]/backele2</value>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>n2</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[frontele2=1]/frontele1</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>n1</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[frontele1=1]/frontele2</value>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <function xsi:type="ok"/>
                                </next>
                                <function xsi:type="check"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($ele1 = $n1) and ($ele2 = $m1) and ($ele3 = $m2)</value>
                                </arguments>
                            </next>
                            <function xsi:type="debug"/>
                        </next>
                        <variableName>m2</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[backele1=2]/backele1</value>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>m1</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[backele1=1]/backele2</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>n2</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[frontele2=1]/frontele1</value>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <function xsi:type="ok"/>
                            </next>
                            <function xsi:type="check"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($ele1 = $n1) and ($ele2 = $m1) and ($ele3 = $m2)</value>
                            </arguments>
                        </next>
                        <function xsi:type="debug"/>
                    </next>
                    <variableName>m2</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[backele1=2]/backele1</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>m1</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[backele1=1]/backele2</value>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <function xsi:type="ok"/>
                        </next>
                        <function xsi:type="check"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($ele1 = $n1) and ($ele2 = $m1) and ($ele3 = $m2)</value>
                        </arguments>
                    </next>
                    <function xsi:type="debug"/>
                </next>
                <variableName>m2</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[backele1=2]/backele1</value>
                    </arguments>
                </expression>
            </AssignBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <function xsi:type="ok"/>
                    </next>
                    <function xsi:type="check"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($ele1 = $n1) and ($ele2 = $m1) and ($ele3 = $m2)</value>
                    </arguments>
                </next>
                <function xsi:type="debug"/>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <function xsi:type="ok"/>
                </next>
                <function xsi:type="check"/>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">($ele1 = $n1) and ($ele2 = $m1) and ($ele3 = $m2)</value>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <function xsi:type="ok"/>
            </FunctionBox>
        </decisionBox>
        <inputVariables>
            <name>ele1</name>
        </inputVariables>
        <inputVariables>
            <name>ele2</name>
            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"></value>
        </inputVariables>
        <inputVariables>
            <name>ele3</name>
            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"></value>
        </inputVariables>
        <questionId>Question-3454406021296389257122</questionId>
        <questionText>3. Welche Elemente wurden mit dem Element 1 getauscht? Aufpassen die Reihenfolge.</questionText>
        <script>// No script
n1 = Retrieve("events/swapEvent[frontele1=1]/frontele2");
n2 = Retrieve("events/swapEvent[frontele2=1]/frontele1");
m1 = Retrieve("events/swapEvent[backele1=1]/backele2");
m2 = Retrieve("events/swapEvent[backele1=2]/backele1");

Debug();
Check("($ele1 = $n1) and ($ele2 = $m1) and ($ele3 = $m2)");

Ok();</script>
    </questionsList>
    <questionsList>
        <decisionBox xsi:type="scriptBox" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <inputVariables>
                <name>x</name>
            </inputVariables>
            <next xsi:type="assignBox">
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="assignBox">
                            <next xsi:type="assignBox">
                                <next xsi:type="functionBox">
                                    <next xsi:type="functionBox">
                                        <next xsi:type="functionBox">
                                            <function xsi:type="ok"/>
                                            <arguments xsi:type="valueOfIdentifier">
                                                <variableName>x</variableName>
                                            </arguments>
                                            <arguments xsi:type="valueOfIdentifier">
                                                <variableName>total</variableName>
                                            </arguments>
                                        </next>
                                        <function xsi:type="comment"/>
                                        <arguments xsi:type="constantValue">
                                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Es gibt nur zwei mal Austausch bei der Gegenrichtung. Das erste Mal ist der Austausch zwischen das Element 2 und 3. Das zweite Mal ist der Austausch zwischen das Element 1 und 4.  </value>
                                        </arguments>
                                    </next>
                                    <function xsi:type="debug"/>
                                </next>
                                <variableName>total</variableName>
                                <expression xsi:type="functionBox">
                                    <function xsi:type="retrieve"/>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$count1 + $count2</value>
                                    </arguments>
                                </expression>
                            </next>
                            <variableName>count2</variableName>
                            <expression xsi:type="functionBox">
                                <function xsi:type="retrieve"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(/)</value>
                                </arguments>
                                <arguments xsi:type="valueOfIdentifier">
                                    <variableName>m</variableName>
                                </arguments>
                            </expression>
                        </next>
                        <variableName>m</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[seqnr = 5]</value>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>count1</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(/)</value>
                        </arguments>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>n</variableName>
                        </arguments>
                    </expression>
                </next>
                <variableName>n</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[seqnr = 4]</value>
                    </arguments>
                </expression>
            </next>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="assignBox">
                            <next xsi:type="assignBox">
                                <next xsi:type="functionBox">
                                    <next xsi:type="functionBox">
                                        <next xsi:type="functionBox">
                                            <function xsi:type="ok"/>
                                            <arguments xsi:type="valueOfIdentifier">
                                                <variableName>x</variableName>
                                            </arguments>
                                            <arguments xsi:type="valueOfIdentifier">
                                                <variableName>total</variableName>
                                            </arguments>
                                        </next>
                                        <function xsi:type="comment"/>
                                        <arguments xsi:type="constantValue">
                                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Es gibt nur zwei mal Austausch bei der Gegenrichtung. Das erste Mal ist der Austausch zwischen das Element 2 und 3. Das zweite Mal ist der Austausch zwischen das Element 1 und 4.  </value>
                                        </arguments>
                                    </next>
                                    <function xsi:type="debug"/>
                                </next>
                                <variableName>total</variableName>
                                <expression xsi:type="functionBox">
                                    <function xsi:type="retrieve"/>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$count1 + $count2</value>
                                    </arguments>
                                </expression>
                            </next>
                            <variableName>count2</variableName>
                            <expression xsi:type="functionBox">
                                <function xsi:type="retrieve"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(/)</value>
                                </arguments>
                                <arguments xsi:type="valueOfIdentifier">
                                    <variableName>m</variableName>
                                </arguments>
                            </expression>
                        </next>
                        <variableName>m</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[seqnr = 5]</value>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>count1</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(/)</value>
                        </arguments>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>n</variableName>
                        </arguments>
                    </expression>
                </next>
                <variableName>n</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[seqnr = 4]</value>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="assignBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <next xsi:type="functionBox">
                                        <function xsi:type="ok"/>
                                        <arguments xsi:type="valueOfIdentifier">
                                            <variableName>x</variableName>
                                        </arguments>
                                        <arguments xsi:type="valueOfIdentifier">
                                            <variableName>total</variableName>
                                        </arguments>
                                    </next>
                                    <function xsi:type="comment"/>
                                    <arguments xsi:type="constantValue">
                                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Es gibt nur zwei mal Austausch bei der Gegenrichtung. Das erste Mal ist der Austausch zwischen das Element 2 und 3. Das zweite Mal ist der Austausch zwischen das Element 1 und 4.  </value>
                                    </arguments>
                                </next>
                                <function xsi:type="debug"/>
                            </next>
                            <variableName>total</variableName>
                            <expression xsi:type="functionBox">
                                <function xsi:type="retrieve"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$count1 + $count2</value>
                                </arguments>
                            </expression>
                        </next>
                        <variableName>count2</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(/)</value>
                            </arguments>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>m</variableName>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>m</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[seqnr = 5]</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>count1</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(/)</value>
                    </arguments>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>n</variableName>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="assignBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <next xsi:type="functionBox">
                                    <function xsi:type="ok"/>
                                    <arguments xsi:type="valueOfIdentifier">
                                        <variableName>x</variableName>
                                    </arguments>
                                    <arguments xsi:type="valueOfIdentifier">
                                        <variableName>total</variableName>
                                    </arguments>
                                </next>
                                <function xsi:type="comment"/>
                                <arguments xsi:type="constantValue">
                                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Es gibt nur zwei mal Austausch bei der Gegenrichtung. Das erste Mal ist der Austausch zwischen das Element 2 und 3. Das zweite Mal ist der Austausch zwischen das Element 1 und 4.  </value>
                                </arguments>
                            </next>
                            <function xsi:type="debug"/>
                        </next>
                        <variableName>total</variableName>
                        <expression xsi:type="functionBox">
                            <function xsi:type="retrieve"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$count1 + $count2</value>
                            </arguments>
                        </expression>
                    </next>
                    <variableName>count2</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(/)</value>
                        </arguments>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>m</variableName>
                        </arguments>
                    </expression>
                </next>
                <variableName>m</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">events/swapEvent[seqnr = 5]</value>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="assignBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <next xsi:type="functionBox">
                                <function xsi:type="ok"/>
                                <arguments xsi:type="valueOfIdentifier">
                                    <variableName>x</variableName>
                                </arguments>
                                <arguments xsi:type="valueOfIdentifier">
                                    <variableName>total</variableName>
                                </arguments>
                            </next>
                            <function xsi:type="comment"/>
                            <arguments xsi:type="constantValue">
                                <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Es gibt nur zwei mal Austausch bei der Gegenrichtung. Das erste Mal ist der Austausch zwischen das Element 2 und 3. Das zweite Mal ist der Austausch zwischen das Element 1 und 4.  </value>
                            </arguments>
                        </next>
                        <function xsi:type="debug"/>
                    </next>
                    <variableName>total</variableName>
                    <expression xsi:type="functionBox">
                        <function xsi:type="retrieve"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$count1 + $count2</value>
                        </arguments>
                    </expression>
                </next>
                <variableName>count2</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">count(/)</value>
                    </arguments>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>m</variableName>
                    </arguments>
                </expression>
            </AssignBox>
            <AssignBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <next xsi:type="functionBox">
                            <function xsi:type="ok"/>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>x</variableName>
                            </arguments>
                            <arguments xsi:type="valueOfIdentifier">
                                <variableName>total</variableName>
                            </arguments>
                        </next>
                        <function xsi:type="comment"/>
                        <arguments xsi:type="constantValue">
                            <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Es gibt nur zwei mal Austausch bei der Gegenrichtung. Das erste Mal ist der Austausch zwischen das Element 2 und 3. Das zweite Mal ist der Austausch zwischen das Element 1 und 4.  </value>
                        </arguments>
                    </next>
                    <function xsi:type="debug"/>
                </next>
                <variableName>total</variableName>
                <expression xsi:type="functionBox">
                    <function xsi:type="retrieve"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">$count1 + $count2</value>
                    </arguments>
                </expression>
            </AssignBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <next xsi:type="functionBox">
                        <function xsi:type="ok"/>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>x</variableName>
                        </arguments>
                        <arguments xsi:type="valueOfIdentifier">
                            <variableName>total</variableName>
                        </arguments>
                    </next>
                    <function xsi:type="comment"/>
                    <arguments xsi:type="constantValue">
                        <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Es gibt nur zwei mal Austausch bei der Gegenrichtung. Das erste Mal ist der Austausch zwischen das Element 2 und 3. Das zweite Mal ist der Austausch zwischen das Element 1 und 4.  </value>
                    </arguments>
                </next>
                <function xsi:type="debug"/>
            </FunctionBox>
            <FunctionBox>
                <next xsi:type="functionBox">
                    <function xsi:type="ok"/>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>x</variableName>
                    </arguments>
                    <arguments xsi:type="valueOfIdentifier">
                        <variableName>total</variableName>
                    </arguments>
                </next>
                <function xsi:type="comment"/>
                <arguments xsi:type="constantValue">
                    <value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">Es gibt nur zwei mal Austausch bei der Gegenrichtung. Das erste Mal ist der Austausch zwischen das Element 2 und 3. Das zweite Mal ist der Austausch zwischen das Element 1 und 4.  </value>
                </arguments>
            </FunctionBox>
            <FunctionBox>
                <function xsi:type="ok"/>
                <arguments xsi:type="valueOfIdentifier">
                    <variableName>x</variableName>
                </arguments>
                <arguments xsi:type="valueOfIdentifier">
                    <variableName>total</variableName>
                </arguments>
            </FunctionBox>
        </decisionBox>
        <inputVariables>
            <name>x</name>
        </inputVariables>
        <questionId>Question-3454406021296390059665</questionId>
        <questionText>4. Wie viele Austausch gibt es bei "Gegenrichtung "?</questionText>
        <script>// No script
n = Retrieve("events/swapEvent[seqnr = 4]");
count1 = Retrieve("count(/)",n);
m = Retrieve("events/swapEvent[seqnr = 5]");
count2 = Retrieve("count(/)",m);
total = Retrieve("$count1 + $count2");
Debug();
Comment("Es gibt nur zwei mal Austausch bei der Gegenrichtung. Das erste Mal ist der Austausch zwischen das Element 2 und 3. Das zweite Mal ist der Austausch zwischen das Element 1 und 4.  ");
Ok(x,total);</script>
    </questionsList>
    <subTitle>Output  Language: Java
Author: Xiaofan Fan</subTitle>
    <title>Cocktail Sort</title>
</ns2:exercise>
